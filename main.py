from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.feature_extraction.text import TfidfVectorizer
from skimage import io
from skimage.transform import resize
import numpy as np
import csv

# Предположим, у вас есть данные в формате (изображение, название, описание, продажи)
# Пример данных (замените его своими реальными данными)
"""data = [
    {"image_path": "image/image1.jpg", "name": "Беспроводной автомобильный воздушный компрессор, электрический насос для накачки шин автомобиля, мотоцикла, велосипеда, лодки, мощность: 100 Вт", 
     "description": "• Беспроводной и удобный :Не нужны провода или шнуры, этот воздушный компрессор прост в использовании, и его можно взять с собой куда угодно.• Универсальный :Подходит для использования с автомобилями, мотоциклами, велосипедами, лодками и даже спортивными мячами.• Высокое-Качество :Этот воздушный компрессор, изготовленный из прочных материалов, рассчитан на длительный срок службы и обеспечивает надежное обслуживание.• Эффективный :Благодаря мощному двигателю этот воздушный компрессор может быстро надуть шины и другие надувные предметы.",
     "sales": 13764},
    {"image_path": "image/image2.jpg", "name": "Машинка для стрижки волос, аккумуляторная, 110-240 В", 
     "description": "• Время зарядки аккумулятора до 2 часов :Зарядите свой триммер всего за 2 часа, что сэкономит ваше время и хлопоты.• Роторный Тип мотора :Поворотный двигатель обеспечивает плавную и точную стрижку, что позволяет легко добиться идеальной стрижки.• Изменение метода регулировки длины сопел :Легко отрегулируйте длину стрижки, меняя насадки, что даст вам больше универсальности при стрижке.• Несколько форсунок включены :Поставляется с 3-4 насадками, позволяющими переключаться между разной длиной и стилем реза.Детали продукта:Продукт: отчетная машинка для стрижкиВходное напряжение: 110-240 В переменного тока, 50/60 ГцВремя зарядки: 2 часаВремя использования: 45 мин.Вес: около 100 гСписок пакетов: Вы получите 1 шт. * Триммер для волос, 1 шт. * Щетка, 4 шт. * Ограничитель гребня (1,5 мм 2 мм 3 мм 4 мм) и 1 шт. * Зарядное устройство USB", 
     "sales": 10581},
    {"image_path": "image/image3.jpg", "name": "Салат овощерезка", 
     "description": "• Многофункциональный Салат Инструменты :Этот продукт-не просто нож, это универсальный инструмент, который можно использовать для нарезки фруктов, овощей и даже салатов.• Лезвие нержавеющей стали :Лезвие изготовлено из прочной нержавеющей стали, что гарантирует, что оно прослужит долгое время, не ржавеет и не корродирует.• Экологичный материал :Продукт изготовлен из экологически чистого пластика, что делает его устойчивым выбором для тех, кто заботится об окружающей среде.• Тип терки :Этот продукт является теркой, что означает, что его можно использовать для терки фруктов, овощей и даже сыра, добавляя новый уровень текстуры вашей еде.Описание продукта:Название продукта: многофункциональная овощерезкаМатериал: пшеничная солома + нержавеющая стальЦвет: розовый, зеленый, синийВес: 420 граммОсобенности и использование:1. Чистить удобно и экономично. Найдите белый круг на основной плате и нажмите на него. Нажав на нее, аккуратно промойте воду и, наконец, очистите ее.2. Шаги резки: Поместите ингредиенты в пресс-доску и отрегулируйте длину в соответствии с вашими потребностями, затем положите руку на белый блок пресс-доски и нажмите на нее.3. Лезвие легко установить и использовать. Наклоните лезвие в канавку и осторожно прижмите его. Возьмите лезвие: обеими руками возьмитесь за заднюю часть основной платы и осторожно нажмите большим пальцем посередине лезвия.Примечание:1. Возможны небольшие ошибки в размере из-за ручного измерения.2. В связи с разной конфигурацией разных мониторов изображение не отображает фактический цвет товара.", 
     "sales": 68},

    # Добавьте больше данных...
]"""

data = []

# Assuming 'data.csv' has columns: image_path, name, description, sales
with open('data.csv', newline='', encoding='utf-8') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        data.append({
            "image_path": row['image_path'],
            "name": row['name'],
            "description": row['description'],
            "sales": int(row['sales'])
        })


# Извлечение признаков из изображений
image_features = []
for item in data:
    image = io.imread(item["image_path"])
    resized_image = resize(image, (100, 100))  # Приведем изображения к одному размеру для простоты
    flattened_image = resized_image.flatten()
    image_features.append(flattened_image)

# Извлечение признаков из текстов (названий и описаний товаров)
text_features = []
for item in data:
    text_features.append(item["name"] + " " + item["description"])

# Векторизация текста
vectorizer = TfidfVectorizer()
text_features = vectorizer.fit_transform(text_features).toarray()

# Объединение признаков
X = np.concatenate((image_features, text_features), axis=1)
y = np.array([item["sales"] for item in data])

# Разделение на обучающий и тестовый наборы
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Создание и обучение модели случайного леса
model = RandomForestRegressor()
model.fit(X_train, y_train)

# Оценка модели
train_score = model.score(X_train, y_train)
test_score = model.score(X_test, y_test)

print(f"Train R^2 Score: {train_score:.2f}")
print(f"Test R^2 Score: {test_score:.2f}")

# Пример предсказания для нового товара
new_product = {"image_path": "image/image5.jpg", "name": "Воздушный насос для шин, портативный компрессор для шин, 12 В, 150 фунтов/кв. Дюйм, с проводным/беспроводным насосом, для автомобилей, мотоциклов, велосипедов", 
               "description": "Воздушный насос для шин автомобильный портативный воздушный компрессор для шин воздушный насос 12 В беспроводной насос для накачки шин Электрический насос для автоматического воздушного компрессораИнформация о товаре:Название: беспроводной воздушный насосНоминальное напряжение: 12 ВНоминальный ток: ≤ 8AНоминальная мощность: ≤ 100WРасход воздуха: 35 л/минВыходное давление воздуха: 150 фунтов на квадратный дюймХарактеристики цилиндра: 22 ммШум: 80 дБМатериал: АБС + сплавВремя зарядки: 2,5 чЕмкость литиевой батареи: 2000 мАч * 3 /5CВремя непрерывной работы от аккумулятора: 20 мин.Упаковочный листВоздушный насос x 1【Быстрое надувание и автоотключение】Наш беспроводной насос для накачивания шин имеет мощное Сжатие воздуха до 150 фунтов на квадратный дюйм, что может накачать ваши автомобильные шины за секунды, экономя драгоценное время. Он автоматически отключится, как только будет достигнуто заданное значение давления. Так что вам не нужно беспокоиться о накачивании или низком давлении в шинах. Примечание: Не подходит для больших грузовых шин и больших внедорожников.【Цифровые счетчики и светодиодные лампы】Цифровой ЖК-экран для легкой предустановки 4 различных единиц измерения (фунт/кв. Дюйм, кПа, бар и кг/см2). Вы также можете предварительно установить целевое давление или проверить состояние давления с помощью нашего насоса для шин воздушного компрессора. С ярким светодиодным светом он может освещаться даже в темных местах и может использоваться срочно ночью.【Источник питания USB 】Оснащен перезаряжаемой литиевой батареей 2000mAh * 3, которая поддерживает зарядку несколько раз, идеально подходит для повседневного использования. Мы также предоставляем портативный USB-кабель питания, который можно напрямую подключить к адаптеру телефона для большей простоты и удобства.【Экономия места и портативность】С чехлом для переноски наш насос для накачки шин не занимает много места, что позволяет положить его в машину и вовремя помочь вам. Легкая и прочная конструкция может использоваться одной рукой, что очень удобно для повседневного использования.【Многофункциональная бесплатность】Наш воздушный насос оснащен 4 дополнительными насадками, которые не только подходят для автомобилей, мотоциклов и велосипедов, но также идеально подходят для спасательных поплавков, спортивных мячей, надувных лодок и других надувных лодок и т. д.Быстрое надувание беспроводное портативное Надувное устройствоAl умный/3X2000mAh/мощный"  }
new_image = io.imread(new_product["image_path"])
resized_new_image = resize(new_image, (100, 100)).flatten()[np.newaxis, :]  # Преобразование в двумерный массив
vectorized_text = vectorizer.transform([new_product["name"] + " " + new_product["description"]]).toarray()
new_features = np.concatenate((resized_new_image, vectorized_text), axis=1)

predicted_sales = model.predict(new_features)
print(f"Predicted Sales for New Product: {predicted_sales[0]:.2f}")

